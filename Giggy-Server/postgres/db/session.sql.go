// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: session.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const clearTestSessions = `-- name: ClearTestSessions :exec
DELETE FROM sessions
`

func (q *Queries) ClearTestSessions(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, clearTestSessions)
	return err
}

const createSessionByPhone = `-- name: CreateSessionByPhone :one
INSERT INTO sessions (
  ip, user_id, expires
) VALUES (
  $1, $2, $3
) RETURNING id, ip, user_id, expires, created_at, updated_at
`

type CreateSessionByPhoneParams struct {
	Ip      string    `json:"ip"`
	UserID  uuid.UUID `json:"user_id"`
	Expires time.Time `json:"expires"`
}

func (q *Queries) CreateSessionByPhone(ctx context.Context, arg CreateSessionByPhoneParams) (Session, error) {
	row := q.db.QueryRowContext(ctx, createSessionByPhone, arg.Ip, arg.UserID, arg.Expires)
	var i Session
	err := row.Scan(
		&i.ID,
		&i.Ip,
		&i.UserID,
		&i.Expires,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
